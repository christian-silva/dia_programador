/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programador;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;

/**
 *
 * @author Christian Silva
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelPrint = new javax.swing.JLabel();
        jButtonVerificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dia do Programador");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLabelPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/programador/telaFundo.png"))); // NOI18N

        jButtonVerificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/programador/apply.png"))); // NOI18N
        jButtonVerificar.setText("Verificar");
        jButtonVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonVerificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelPrint)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jButtonVerificar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerificarActionPerformed

        try {
            obterReproduzirAudio();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

        LocalDate hoje = LocalDate.now();
        DateTimeFormatter formatador = DateTimeFormatter.ofPattern("dd-MM-yyyy");

        LocalDate inicioAno = LocalDate.of(hoje.getYear(), 1, 1);
        LocalDate diaDoProgramador = inicioAno.plusDays(256);
        
        System.out.println("              Hoje: " + hoje.format(formatador));
        System.out.println("Dia do Programador: " + diaDoProgramador.format(formatador));
        

        if (hoje.format(formatador).equals(diaDoProgramador.format(formatador))) {
            System.out.println("Parabéns, Feliz dia do Programador.");
            JOptionPane.showMessageDialog(this, "Parabéns, Feliz dia do Programador.");
        } else {
            System.out.println("Dia Normal, continue com o café.");
            JOptionPane.showMessageDialog(this, "Dia Normal, continue com o café.");
        }

    }//GEN-LAST:event_jButtonVerificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonVerificar;
    private javax.swing.JLabel jLabelPrint;
    // End of variables declaration//GEN-END:variables

    private void obterReproduzirAudio() throws MalformedURLException, LineUnavailableException, UnsupportedAudioFileException, IOException {
        // Carrega o arquivo de áudio (não funciona com .mp3, só .wav) 
        URL Url = retornaURLSom();
        Clip oClip = AudioSystem.getClip();
        AudioInputStream oStream = AudioSystem.getAudioInputStream(Url);
        oClip.open(oStream);
        oClip.start(); // Toca uma vez
    }

    private URL retornaURLSom() throws MalformedURLException {
        Map<Integer, String> urls = new HashMap<>();
        int k = 0;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/sebulba-poodoo.wav");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/ThyBidding.wav");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/xwing.wav");
        k++;
        urls.put(k, "http://hansolo1221.tripod.com/sounds/imptheme.wav");
        k++;
        urls.put(k, "http://hansolo1221.tripod.com/sounds/imptheme.wav");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/AckForce.wav");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/BADFEEL1.WAV");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/chewy1.wav");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/ALL2EASY.WAV");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/FATHER.WAV");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/saberup.wav");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/LAZER.WAV");
        k++;
        urls.put(k, "http://www.galaxyfaraway.com/Sounds/specFX.wav");
        k++;
        urls.put(k, "http://hansolo1221.tripod.com/sounds/imptheme.wav");
        k++;
        urls.put(k, "http://hansolo1221.tripod.com/sounds/imptheme.wav");

        int valor = (int) (Math.random() * 15);

        return new URL(urls.get(valor));
    }
}
